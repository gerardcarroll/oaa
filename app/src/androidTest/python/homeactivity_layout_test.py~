#
#
#	HomeActivity layout test, compares the HomeActivity UI Image against a "baseline" HomeActivity UI Image
#	any deviation should fail test 
#
#		1. loads reference HomeActivity Ui Image
#		2. starts device 
#		3. Loads HomeActivity
#		4. captures HomeActivity image
#		5. compares images

# Imports the monkeyrunner modules used by this program
from com.android.monkeyrunner import MonkeyRunner, MonkeyDevice, MonkeyImage
import time
import sys

def home_activity_test():
    print('Home activity test no extra ui actions to perform')
    # Presses the Menu button
    # device.press('KEYCODE_MENU', MonkeyDevice.DOWN_AND_UP)
    MonkeyRunner.sleep(1)
    
def communities_activity_test():
    print('Communities activity perform actions')
    

if __name__ == "__main__":
    if sys.argv[1] == 'help':
        print ('Usage: param1 : apk path, param2 : activity to test, param3 : activity baseline image path')

    apk_path=sys.argv[1] 
    activity_under_test=sys.argv[2]
    baseline_activity_image_path = sys.argv[3] 
    activity_action_method = sys.argv[4]

    # Load the reference image for HomeActivity comparison
    reference_screenshot = MonkeyRunner.loadImageFromFile(baseline_activity_image_path)

    # Connects to the current device, returning a MonkeyDevice object
    device = MonkeyRunner.waitForConnection()

    # Installs the Android package. Notice that this method returns a boolean, so you can test
    # to see if the installation worked.
    if device.installPackage(apk_path):

        print('APK installed on device')
        # sets a variable with the package's internal name
        package = 'com.overstock.android.prototype'

        # sets a variable with the name of an Activity in the package
        activity = '.activity.' + activity_under_test

        # sets the name of the component to start
        runComponent = package + '/' + activity

        print('Starting activity : ' + runComponent)
        # Runs the componentecho $
        device.startActivity(component=runComponent)

        #invoke specific action for the activity under test
        eval(activity_action_method + "()")

        # Takes a screenshot
        print('Getting screenshot of running activity : ' + runComponent)
        current_activity_screenshot = device.takeSnapshot()

        # Writes the screenshot to a file
        current_activity_screenshot.writeToFile('screenshots/' + activity_under_test + '_' + str(int(time.time())) + '.png','png')

        # Take the sub-image
        #sub_image = current_activity_screenshot.getSubImage((0, 0, 50, 100))
	
        print('*' * 50)
        if not current_activity_screenshot.sameAs(reference_screenshot, 0.9):
            print "Images do not match, test failed!"
	    sys.exit(1) #
        else:
            print "Test passed!!"
        print('*' * 50)

    else:
        print('*' * 50)
        print('error installing apk')
        sys.exit(101) #



