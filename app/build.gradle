import com.google.android.perftesting.PerfTestTaskGeneratorPlugin

buildscript {
    repositories {
        maven { url 'https://maven.fabric.io/public' }
        maven { url 'https://plugins.gradle.org/m2/' }
    }

    dependencies {
        classpath 'io.fabric.tools:gradle:1.21.5'
        classpath 'net.researchgate:gradle-release:2.3.4'
    }
}
plugins {
    id 'net.researchgate.release' version '2.3.4'
}

repositories {
    maven { url 'https://maven.fabric.io/public' }
    maven { url "https://oss.sonatype.org/content/repositories/snapshots" }
}

apply plugin: 'net.researchgate.release'
apply plugin: 'com.android.application'
apply plugin: 'io.fabric' // i.e. crashlytics
apply plugin: 'com.neenbedankt.android-apt'

android {
    // For Robolectric known issue this can be removed once 3.1 is released.
    useLibrary 'org.apache.http.legacy'
    defaultConfig {
        applicationId "com.overstock.android.prototype"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
        archivesBaseName = "OApp"
        minSdkVersion rootProject.ext.minSdkVersion
        targetSdkVersion rootProject.ext.targetSdkVersion
        versionCode rootProject.ext.versionCode
        versionName rootProject.ext.versionName
    }
    compileSdkVersion rootProject.ext.compileSdkVersion
    buildToolsVersion rootProject.ext.buildToolsVersion

    lintOptions {
        checkReleaseBuilds false // TODO remove
        abortOnError false // TODO remove
    }

    signingConfigs {
        release {
            keyAlias 'oapp_proto_rel'
            keyPassword System.getenv("KEY_PASSWORD")
            storeFile file('oapp_prototype_release.jks')
            storePassword System.getenv("STORE_PASSWORD")
        }
        debug {
            keyAlias 'oappprototype'
            keyPassword 'android'
            storeFile file('oapp_prototype_key.keystore')
            storePassword 'android'
            ext.enableCrashlytics = false
        }
    }

    buildTypes {
        release {
            // minifyEnabled true TODO uncomment
            shrinkResources true
            signingConfig signingConfigs.release
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            ext.betaDistributionReleaseNotes = "https://confluence.overstock.com/x/3IR9Aw"
            ext.betaDistributionGroupAliases = "oapp_beta_testers"
            ext.betaDistributionNotifications = true
        }
        debug {
            signingConfig signingConfigs.debug
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            testCoverageEnabled true
        }
    }
}

dependencies {

    compile project(':parse-services')
    compile project(':navdrawer-ui')
    compile fileTree(dir: 'libs', include: ['*.jar'])

    testCompile junit
    testCompile mockitoCore
    testCompile dagger.daggerMock

    testCompile robolectric.robolectric
    testCompile robolectric.shadowsSupport
    apt dagger.daggerCompiler
    provided javaxAnnotation
    apt autoParcelProcessor
    provided icepickProcessor

    testCompile dagger.daggerCompiler
    androidTestApt dagger.daggerCompiler

    androidTestCompile(supportTestDependencies.espresso.espressoContrib) {
        exclude group: 'com.android.support', module: 'appcompat'
        exclude group: 'com.android.support', module: 'support-v4'
        exclude group: 'com.android.support', module: 'support-annotations'
        exclude module: 'recyclerview-v7'
    }

    androidTestCompile(supportTestDependencies.espresso.espressoCore) {
        // Necessary if your app targets Marshmallow (since Espresso
        // hasn't moved to Marshmallow yet)
        exclude group: 'com.android.support', module: 'support-annotations'
    }
    androidTestCompile(supportTestDependencies.runner) {
        // Necessary if your app targets Marshmallow (since the test runner
        // hasn't moved to Marshmallow yet)
        exclude group: 'com.android.support', module: 'support-annotations'
    }
    //added for UI Automation
    androidTestCompile supportTestDependencies.rules
    androidTestCompile supportTestDependencies.uiautomator
    androidTestCompile supportDependencies.supportAnnotation

    androidTestCompile(supportTestDependencies.espresso.espressoIntents) {
        exclude module: 'espresso-core'
    }

    androidTestCompile dexmaker.dexmaker
    androidTestCompile(dexmaker.dexmakerMockito) {
        exclude group: 'org.hamcrest', module: 'hamcrest-core'
    }
    androidTestCompile mockitoCore
    androidTestCompile dagger.daggerMock

    apt parceler

    compile('com.crashlytics.sdk.android:crashlytics:2.5.5@aar') {
        transitive = true;
    }
    compile dagger.dagger
    compile gson
    compile playServices.playServicesAuth
    compile supportDependencies.appCompat
    compile supportDependencies.support
    compile supportDependencies.recyclerView
    compile supportDependencies.cardView
    compile supportDependencies.design
    compile supportDependencies.palette
    compile butterknife
    compile androidProcessButton
    compile autoParcel

    compile parcelerApi
    compile icepick
    compile rx.rxjava
    compile rx.rxandroid
    compile picasso
    compile retrofit2.retrofit
    compile retrofit2.adapterRxjava
    compile retrofit2.converterGson
    compile circleimageview
    compile easyfonts

    compile arclayoutLibrary

    compile boltsAndroid

    // Image Slider dependencies
    compile nineoldandroidsLibrary
    compile sliderLibrary

}

afterEvaluate {
    afterReleaseBuild.dependsOn crashlyticsUploadDistributionRelease
}

apply plugin: 'com.google.gms.google-services'

apply from: '../jacoco.gradle'
apply from: '../sonar.gradle'


// Create performance testing tasks for all connected Android devices using a Gradle plugin defined
// in the buildSrc directory.
apply plugin: PerfTestTaskGeneratorPlugin