buildscript {
    repositories {
        maven { url 'https://maven.fabric.io/public' }
        maven { url 'https://plugins.gradle.org/m2/' }
    }

    dependencies {
        classpath 'io.fabric.tools:gradle:1.21.5'
        classpath 'net.researchgate:gradle-release:2.3.4'
    }
}
plugins {
    id 'net.researchgate.release' version '2.3.4'
}

repositories {
    maven { url 'https://maven.fabric.io/public' }
    maven { url "https://oss.sonatype.org/content/repositories/snapshots" }
}

apply plugin: 'net.researchgate.release'
apply plugin: 'com.android.application'
apply plugin: 'io.fabric' // i.e. crashlytics
apply plugin: 'com.neenbedankt.android-apt'

android {
    // For Robolectric known issue this can be removed once 3.1 is released.
    useLibrary 'org.apache.http.legacy'
    defaultConfig {
        applicationId "com.overstock.android.prototype"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
        archivesBaseName = "OApp"
        minSdkVersion rootProject.ext.minSdkVersion
        targetSdkVersion rootProject.ext.targetSdkVersion
        versionCode rootProject.ext.versionCode
        versionName rootProject.ext.versionName
    }
    compileSdkVersion rootProject.ext.compileSdkVersion
    buildToolsVersion rootProject.ext.buildToolsVersion

    lintOptions {
        checkReleaseBuilds false // TODO remove
        abortOnError false // TODO remove
    }

    signingConfigs {
        release {
            keyAlias 'oapp_proto_rel'
            keyPassword System.getenv("KEY_PASSWORD")
            storeFile file('oapp_prototype_release.jks')
            storePassword System.getenv("STORE_PASSWORD")
        }
        debug {
            keyAlias 'oappprototype'
            keyPassword 'android'
            storeFile file('oapp_prototype_key.keystore')
            storePassword 'android'
            ext.enableCrashlytics = false
        }
    }

    buildTypes {
        release {
            // minifyEnabled true TODO uncomment
            shrinkResources true
            signingConfig signingConfigs.release
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            ext.betaDistributionReleaseNotes = "https://confluence.overstock.com/x/3IR9Aw"
            ext.betaDistributionGroupAliases = "oapp_beta_testers"
            ext.betaDistributionNotifications = true
        }
        debug {
            signingConfig signingConfigs.debug
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            testCoverageEnabled true
        }
    }

    dataBinding {
        enabled true
    }
}

dependencies {

    compile project(':parse-services')
    compile project(':navdrawer-ui')
    compile fileTree(dir: 'libs', include: ['*.jar'])
    compile dagger.dagger
    compile gson
    compile playServices.playServicesAuth
    compile supportDependencies.appCompat_v7
    compile supportDependencies.support_v4
    compile supportDependencies.recyclerView_v7
    compile supportDependencies.cardView_v7
    compile supportDependencies.design
    compile supportDependencies.palette_v7
    compile butterknife
    compile androidProcessButton
    compile autoParcel
    compile parcelerApi
    compile icepick
    compile rx.rxjava
    compile rx.rxandroid
    compile picasso
    compile retrofit2
    compile circleimageview
    compile easyfonts
    compile arclayoutLibrary
    compile boltsAndroid
    compile nineoldandroidsLibrary
    compile sliderLibrary
    compile('com.crashlytics.sdk.android:crashlytics:2.5.5@aar') {
        transitive = true;
    }

    testCompile junit
    testCompile mockitoCore
    testCompile ('com.github.fabioCollini:DaggerMock:0.5') {
        exclude group : 'com.google.dagger', module: 'dagger'
    }
    testCompile robolectric.robolectric
    testCompile robolectric.shadowsSupport
    testCompile dagger.daggerCompiler

    apt dagger.daggerCompiler
    apt autoParcelProcessor
    apt parceler

    provided javaxAnnotation
    provided icepickProcessor

    androidTestApt dagger.daggerCompiler

    androidTestCompile(supportTestDependencies.espresso.espressoContrib) {
        exclude group: 'com.android.support', module: 'appcompat'
        exclude group: 'com.android.support', module: 'support-v4'
        exclude group: 'com.android.support', module: 'support-annotations'
        exclude module: 'recyclerview-v7'
    }
    androidTestCompile(supportTestDependencies.espresso.espressoCore) {
        // Necessary if your app targets Marshmallow (since Espresso
        // hasn't moved to Marshmallow yet)
        exclude group: 'com.android.support', module: 'support-annotations'
    }
    androidTestCompile(supportTestDependencies.runner) {
        // Necessary if your app targets Marshmallow (since the test runner
        // hasn't moved to Marshmallow yet)
        exclude group: 'com.android.support', module: 'support-annotations'
    }
    androidTestCompile(dexmaker.dexmakerMockito) {
        exclude group: 'org.hamcrest', module: 'hamcrest-core'
    }
    androidTestCompile(supportTestDependencies.espresso.espressoIntents) {
        exclude module: 'espresso-core'
    }
    androidTestCompile supportTestDependencies.rules
    androidTestCompile supportTestDependencies.uiautomator
    androidTestCompile supportDependencies.supportAnnotation
    androidTestCompile dexmaker.dexmaker
    androidTestCompile mockitoCore

    androidTestCompile ('com.github.fabioCollini:DaggerMock:0.5') {
        exclude group : 'com.google.dagger', module: 'dagger'
    }

}

afterEvaluate {
    afterReleaseBuild.dependsOn crashlyticsUploadDistributionRelease
}

apply plugin: 'com.google.gms.google-services'
apply from: '../jacoco.gradle'
apply from: '../sonar.gradle'
