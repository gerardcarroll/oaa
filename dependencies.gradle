ext {
    //Version
    supportLibraryVersion = '23.2.1'
    jUnitVersion = '4.12'
    mockitoCoreVersion = '1.10.19'
    daggerMockVersion = '0.5'
    daggerVersion = '2.0.2'
    robolectricVersion = '3.0'
    javaxAnnotationVersion = '10.0-b28'
    autoParcelProcessorVersion = '0.3.1'
    icepickProcessorVersion = '3.2.0'
    espressoVersion = '2.2.1'
    dexmakerVersion = '1.2'
    gsonVersion = '2.4'
    parcelerVersion = '1.0.4'
    playServicesAuthVersion = '8.4.0'
    butterknifeVersion = '7.0.1'
    androidProcessButtonVersion = '1.0.4'
    autoParcelVersion = '0.3.1'
    parcelerApiVersion = '1.0.4'
    icepickVersion = '3.2.0'
    rxjavaVersion =  '1.1.1'
    rxandroidVersion = '1.1.0'
    picassoVersion = '2.5.2'
    retrofitVersion = '2.0.0-beta4'
    circleimageviewVersion = '2.0.0'
    easyfontsVersion = '1.0.0'
    boltsAndroidVersion = '1.+'
    parseAndroidVersion = '1.+'
    arclayoutLibraryVersion = '1.0.1@aar'
    crashlyticsVersion = '2.5.5@aar'
    javaxInjectVersion = '1'
    testRunnerVersion = '0.4.1'
    nineoldandroidsLibraryVersion = '2.4.0'
    sliderLibraryVersion = '1.1.5@aar'
    uiautomatorVersion = '2.1.1'

    javaxAnnotation = "org.glassfish:javax.annotation:${javaxAnnotationVersion}"
    autoParcelProcessor = "com.github.frankiesardo:auto-parcel-processor:${autoParcelProcessorVersion}"
    icepickProcessor = "frankiesardo:icepick-processor:${icepickProcessorVersion}"
    junit = "junit:junit:${jUnitVersion}"
    mockitoCore = "org.mockito:mockito-core:${mockitoCoreVersion}"
    gson = "com.google.code.gson:gson:${gsonVersion}"
    parceler = "org.parceler:parceler:${parcelerVersion}"
    butterknife = "com.jakewharton:butterknife:${butterknifeVersion}"
    androidProcessButton = "com.github.dmytrodanylyk.android-process-button:library:${androidProcessButtonVersion}"
    autoParcel = "com.github.frankiesardo:auto-parcel:${autoParcelVersion}"
    parcelerApi = "org.parceler:parceler-api:${parcelerApiVersion}"
    icepick = "frankiesardo:icepick:${icepickVersion}"
    picasso = "com.squareup.picasso:picasso:${picassoVersion}"
    boltsAndroid =  "com.parse.bolts:bolts-android:${boltsAndroidVersion}"
    parseAndroid = "com.parse:parse-android:${parseAndroidVersion}"
    arclayoutLibrary = "com.ogaclejapan.arclayout:library:${arclayoutLibraryVersion}"
    circleimageview = "de.hdodenhof:circleimageview:${circleimageviewVersion}"
    easyfonts = "com.vstechlab.easyfonts:easyfonts:${easyfontsVersion}"
    crashlytics = "com.crashlytics.sdk.android:crashlytics:${crashlyticsVersion}"
    javaxInject = "javax.inject:javax.inject:${javaxInjectVersion}"
    nineoldandroidsLibrary = "com.nineoldandroids:library:${nineoldandroidsLibraryVersion}"
    sliderLibrary = "com.daimajia.slider:library:${sliderLibraryVersion}"

    retrofit2 = [
            retrofit : "com.squareup.retrofit2:retrofit:${retrofitVersion}",
            adapterRxjava : "com.squareup.retrofit2:adapter-rxjava:${retrofitVersion}",
            converterGson : "com.squareup.retrofit2:converter-gson:${retrofitVersion}"
    ]

    rx = [
            rxjava  :  "io.reactivex:rxjava:${rxjavaVersion}",
            rxandroid : "io.reactivex:rxandroid:${rxandroidVersion}"
    ]

    //Support Libraries dependencies
    supportDependencies = [
            design           : "com.android.support:design:${supportLibraryVersion}",
            recyclerView     : "com.android.support:recyclerview-v7:${supportLibraryVersion}",
            cardView         : "com.android.support:cardview-v7:${supportLibraryVersion}",
            appCompat        : "com.android.support:appcompat-v7:${supportLibraryVersion}",
            supportAnnotation: "com.android.support:support-annotations:${supportLibraryVersion}",
            support          : "com.android.support:support-v4:${supportLibraryVersion}",
            palette          : "com.android.support:palette-v7:${supportLibraryVersion}"
    ]

    dagger = [
            dagger        : "com.google.dagger:dagger:${daggerVersion}",
            daggerCompiler: "com.google.dagger:dagger-compiler:${daggerVersion}",
            daggerMock    : "com.github.fabioCollini:DaggerMock:${daggerMockVersion}"
    ]

    robolectric = [
            robolectric   : "org.robolectric:robolectric:${robolectricVersion}",
            shadowsSupport: "org.robolectric:shadows-support-v4:${robolectricVersion}"
    ]

    supportTestDependencies = [
            espresso :  [
                    espressoCore   : "com.android.support.test.espresso:espresso-core:${espressoVersion}",
                    espressoContrib: "com.android.support.test.espresso:espresso-contrib:${espressoVersion}",
                    espressoIntents: "com.android.support.test.espresso:espresso-intents:${espressoVersion}"
            ],
            runner : "com.android.support.test:runner:${testRunnerVersion}",
            rules  : "com.android.support.test:rules:${testRunnerVersion}",
            uiautomator : "com.android.support.test.uiautomator:uiautomator-v18:${uiautomatorVersion}"
    ]

    dexmaker = [
            dexmaker       : "com.google.dexmaker:dexmaker:${dexmakerVersion}",
            dexmakerMockito: "com.google.dexmaker:dexmaker-mockito:${dexmakerVersion}"
    ]

    playServices = [
            playServicesAuth : "com.google.android.gms:play-services-auth:${playServicesAuthVersion}"
    ]

}